{"version":3,"sources":["data/resume-melanie-mathey-english.jpg","styles/fonts/Roboto-Regular.ttf","styles/fonts/Roboto-Bold.ttf","styles/fonts/Thinking_of_Betty.ttf","styles/screenSizes.js","styles/colors.js","styles/lib.js","components/Header.js","components/Intro.js","components/Contact.js","components/Footer.js","data/workExperienceData.js","components/AboutCard.js","components/ExperienceCard.js","components/AboutMe.js","styles/theme.js","App.js","index.js"],"names":["module","exports","size","screenSize","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","colors","AZURE","PINK","DEEPBLUE","DARKGRAY","LIGHTGRAY","WHITE","BLACK","SrOnly","styled","div","Hashtag","span","ButtonLink","a","ButtonLinkModal","LinkIcon","StyledHeader","header","StyledButtonWrapper","links","href","icon","Send","color","className","label","Linkedin","Github","TopBar","map","link","index","key","rel","StyledIntro","section","StyledTitle","h1","Intro","resume","target","StyledContact","Contact","Footer","footer","FooterBar","WORK_EXPERIENCE","id","name","shortDesc","jobs","languages","logo","thumbnailPath","fullImgPath","fullDesc","address","StyledAboutCard","Box","StyledAvatar","Avatar","facts","AboutCard","src","process","aria-labelledby","fact","StyledExperience","StyledThumbnail","StyledLayer","Layer","listJobs","job","listLanguages","language","task","ExperienceCard","data","React","useState","show","setShow","onClick","alt","direction","gap","margin","onEsc","onClickOutside","animation","Button","Close","a11yTitle","focusIndicator","Image","paragraph","StyledAboutMe","experiences","experience","AboutMe","THEME","deepMerge","grommet","global","font","family","App","Grommet","theme","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e9c0663.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume-melanie-mathey-english.0d8d6acd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Regular.11eabca2.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Bold.e07df86c.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Thinking_of_Betty.f8170476.ttf\";","const size = {\r\n    mobileS: '320px',\r\n    mobileM: '375px',\r\n    mobileL: '425px',\r\n    tablet: '768px',\r\n    laptop: '1024px',\r\n    laptopL: '1440px',\r\n    desktop: '2560px'\r\n}\r\n\r\nconst screenSize = {\r\n    mobileS: `(min-width: ${size.mobileS})`,\r\n    mobileM: `(min-width: ${size.mobileM})`,\r\n    mobileL: `(min-width: ${size.mobileL})`,\r\n    tablet: `(min-width: ${size.tablet})`,\r\n    laptop: `(min-width: ${size.laptop})`,\r\n    laptopL: `(min-width: ${size.laptopL})`,\r\n    desktop: `(min-width: ${size.desktop})`,\r\n    desktopL: `(min-width: ${size.desktop})`\r\n};\r\n\r\nexport default screenSize;","const colors = {\r\n    AZURE : \"#03ccf7\",\r\n    PINK : \"#F60C86\",\r\n    DEEPBLUE : \"#1670f7\",\r\n    DARKGRAY : \"#4d4d4d\",\r\n    LIGHTGRAY: \"#ebebeb\",\r\n    WHITE : \"#fbfeff\",\r\n    BLACK : \"#000\"\r\n}\r\nexport default colors;","import styled from 'styled-components'\r\nimport colors from './colors'\r\n\r\nexport const SrOnly = styled.div`\r\n    &:not(:focus):not(:active) {\r\n        clip: rect(0 0 0 0); \r\n        clip-path: inset(50%);\r\n        height: 1px;\r\n        overflow: hidden;\r\n        position: absolute;\r\n        white-space: nowrap; \r\n        width: 1px;\r\n    }\r\n`;\r\n\r\nexport const Hashtag = styled.span`\r\n    display: inline-block;\r\n    margin: 0.5rem 0.5rem 0 0;\r\n    padding: 0.3rem 1rem;\r\n    \r\n    background-color: ${colors.LIGHTGRAY};\r\n    border-radius: 0.7rem;\r\n    \r\n    color: ${colors.DARKGRAY};\r\n`;\r\n\r\nexport const ButtonLink = styled.a`\r\n    padding: 1.5rem 3rem;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 0.8rem 3rem -0.6rem rgba(0, 0, 0, 0.3);\r\n    background-color: ${colors.WHITE};\r\n    \r\n    text-decoration: none;\r\n    text-align: center;\r\n    color: ${colors.DEEPBLUE};\r\n\r\n    &:focus {\r\n        outline: 0.1rem dashed ${colors.WHITE};\r\n        outline-offset: 0.2rem;\r\n    }\r\n`;\r\n\r\nexport const ButtonLinkModal = styled(ButtonLink)`\r\n    display: block;    \r\n    margin: 2rem auto 1rem;\r\n    width: 40%;\r\n    padding: 1 3rem;\r\n    border: 0.3rem solid ${colors.AZURE};\r\n    \r\n    color: ${colors.AZURE};\r\n    \r\n    &:focus {\r\n        outline-color: ${colors.AZURE};\r\n    }\r\n`;\r\n\r\nexport const LinkIcon = styled.a`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin: 0 1rem;\r\n    text-decoration: none;\r\n    color: ${colors.DEEPBLUE};\r\n    &:focus {\r\n        outline: 0.1rem dashed ${colors.DEEPBLUE};\r\n        outline-offset: 0.2rem;\r\n    }\r\n    &  > span{\r\n        font-size: 1.4rem;\r\n        margin-top: 0.6rem;\r\n    }\r\n`;","import React from 'react';\r\nimport { Send, Linkedin, Github } from 'grommet-icons';\r\nimport styled from 'styled-components';\r\n\r\nimport screenSize from '../styles/screenSizes';\r\nimport colors from '../styles/colors';\r\nimport { LinkIcon } from '../styles/lib';\r\n\r\nconst StyledHeader = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 1.5rem 2rem;\r\n    background-color: ${colors.WHITE};\r\n    \r\n    & > span{\r\n        font-weight: 700;\r\n        max-width: 7rem;\r\n    }\r\n\r\n    @media screen and ${screenSize.mobileL}{\r\n        & > span{\r\n            max-width: 20rem;\r\n        }\r\n    }\r\n`;\r\n\r\nconst StyledButtonWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n`;\r\n\r\nconst links = [\r\n    {\r\n        href: \"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#109;&#101;&#108;&#97;&#110;&#105;&#101;&#46;&#109;&#97;&#116;&#104;&#101;&#121;&#64;&#111;&#117;&#116;&#108;&#111;&#111;&#107;&#46;&#99;&#111;&#109;\",\r\n        icon: <Send\r\n            color=\"accent-1\"\r\n            className=\"button-icon\" />,\r\n        label: \"Email\"\r\n    },\r\n    {\r\n        href: \"https://fr.linkedin.com/in/m%C3%A9lanie-mathey-056111133\",\r\n        icon: <Linkedin\r\n            color=\"accent-1\"\r\n            className=\"button-icon\" />,\r\n        label: \"Linkedin\"\r\n    },\r\n    {\r\n        href: \"https://github.com/mema17?tab=repositories\",\r\n        icon: <Github\r\n            color=\"accent-1\"\r\n            className=\"button-icon\" />,\r\n        label: \"GitHub\"\r\n    }\r\n]\r\nconst renderLinks = (links) => {\r\n    return (links.map((link, index) => {\r\n        return (\r\n            <LinkIcon\r\n                key={index}\r\n                href={link.href}\r\n                rel=\"noopener noreferrer\">\r\n                {link.icon}\r\n                <span>{link.label}</span>\r\n            </LinkIcon>\r\n        )\r\n    }))\r\n}\r\n\r\n\r\nexport default function TopBar() {\r\n    return (\r\n        <StyledHeader>\r\n            <span>Mélanie Mathey</span>\r\n            <StyledButtonWrapper>\r\n                {renderLinks(links)}\r\n            </StyledButtonWrapper>\r\n        </StyledHeader>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport resume from './../data/resume-melanie-mathey-english.jpg'\r\n\r\nimport styled from 'styled-components'\r\nimport {ButtonLink} from '../styles/lib'\r\nimport colors from '../styles/colors'\r\nimport screenSize from '../styles/screenSizes'\r\n\r\nconst StyledIntro = styled.section`\r\n    padding: 5rem;\r\n    & > p {\r\n        margin-bottom: 5rem;\r\n        color: ${colors.WHITE};\r\n    }\r\n    & > div{\r\n        width: 100%;\r\n        \r\n    }\r\n    & > div > a{\r\n        display: block;\r\n        margin-bottom: 2rem;\r\n    }\r\n    @media screen and ${screenSize.mobileL} {\r\n        & > div{\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            justify-content: space-around;\r\n        }\r\n        & > div > a {\r\n            width: 12rem;\r\n        }\r\n    }\r\n\r\n    @media screen and ${screenSize.tablet} {\r\n        width: 50%;\r\n        margin: 0 auto;\r\n        text-align: center;\r\n        max-width: 46rem;\r\n}\r\n\r\n`;\r\n\r\nconst StyledTitle = styled.h1`\r\n    position: relative;\r\n    margin-bottom: 5rem;\r\n    color: ${colors.WHITE};\r\n    font-family: \"thinking-of-betty\";\r\n    font-weight: normal;\r\n    font-size: 4rem;\r\n    line-height: 6rem;\r\n\r\n    &:after {\r\n        content: \" \";\r\n        position: absolute;\r\n        left: calc(50% - 2.5rem);\r\n        left: 0;\r\n        bottom: -2.5rem;\r\n        width: 4rem;\r\n        height: 0.3rem;\r\n        background-color: ${colors.WHITE};\r\n        border-radius: 1rem;\r\n    }\r\n    @media screen and ${screenSize.tablet}{\r\n        &:after {\r\n            left: calc(50% - 2rem);\r\n        }\r\n    }`;\r\n\r\n\r\nexport default function Intro() {\r\n    return (\r\n        <StyledIntro>\r\n            <StyledTitle>Hello! Welcome to my portfolio</StyledTitle>\r\n            <p>\r\n            I'm Mélanie Mathey, a Paris-based software engineer, UX designer and dedicated doodler. Here are some of the projects I worked on.\r\n            </p>\r\n            <div>\r\n                <ButtonLink \r\n                href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#109;&#101;&#108;&#97;&#110;&#105;&#101;&#46;&#109;&#97;&#116;&#104;&#101;&#121;&#64;&#111;&#117;&#116;&#108;&#111;&#111;&#107;&#46;&#99;&#111;&#109;\" \r\n                rel=\"noopener noreferrer\"\r\n                >&#71;&#101;&#116;&#32;&#105;&#110;&#32;&#116;&#111;&#117;&#99;&#104;\r\n                </ButtonLink>\r\n                <ButtonLink href={resume}target=\"_blank\">Read my resume</ButtonLink>\r\n            </div>\r\n        </StyledIntro>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Linkedin, Send } from 'grommet-icons'\r\n\r\nimport styled from 'styled-components';\r\nimport { LinkIcon } from '../styles/lib';\r\nimport colors from '../styles/colors';\r\n\r\nconst StyledContact = styled.section`\r\n    box-sizing: border-box;\r\n\twidth: 100%;\r\n\tmargin: 0;\r\n\tpadding: 10rem 1rem;\r\n\tbackground-color: ${colors.WHITE};\r\n    text-align: center;\r\n    \r\n    & > h2{\r\n        font-size: 2rem;\r\n\t\tmargin-bottom: 3rem;\r\n\t\tcolor: ${colors.DEEPBLUE};\r\n\t\tmax-width:100%;\r\n    }\r\n    \r\n    & > div{\r\n        display: flex;\r\n\t\tjustify-content: center;\r\n\t\ttext-decoration: none;\r\n    }\r\n    & > div a {\r\n        margin: 0 2rem;\r\n    }\r\n`;\r\n\r\nconst links = [\r\n    {\r\n        href: \"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#109;&#101;&#108;&#97;&#110;&#105;&#101;&#46;&#109;&#97;&#116;&#104;&#101;&#121;&#64;&#111;&#117;&#116;&#108;&#111;&#111;&#107;&#46;&#99;&#111;&#109;\",\r\n        icon: <Send\r\n            color=\"accent-1\"\r\n            className=\"button-icon\" \r\n            size=\"large\"/>,\r\n        label: \"Email\"\r\n    },\r\n    {\r\n        href: \"https://fr.linkedin.com/in/m%C3%A9lanie-mathey-056111133\",\r\n        icon: <Linkedin\r\n            color=\"accent-1\"\r\n            className=\"button-icon\" \r\n            size=\"large\"/>,\r\n        label: \"Linkedin\"\r\n    }\r\n]\r\nconst renderLinks = (links) => {\r\n    return (links.map((link, index) => {\r\n        return (\r\n            <LinkIcon\r\n                key={index}\r\n                href={link.href}\r\n                rel=\"noopener noreferrer\">\r\n                {link.icon}\r\n                <span>\r\n                    {link.label}\r\n                </span>\r\n            </LinkIcon>\r\n        )\r\n    }))\r\n}\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <StyledContact>\r\n            <h2>Let's have a chat and discuss your project together</h2>\r\n            <div>\r\n                {renderLinks(links)}\r\n            </div>\r\n        </StyledContact>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport colors from './../styles/colors'\r\n\r\nconst Footer = styled.footer`\r\n    width: 100%;\r\n    padding: 2rem 0;\r\n    background-color: transparent;\r\n    text-align: center;\r\n    font-size: 1.4rem;\r\n    color: ${colors.WHITE}\r\n`;\r\nexport default function FooterBar() {\r\n    return (\r\n        <Footer>© Mélanie Mathey - 2020</Footer>\r\n    )\r\n}\r\n","const WORK_EXPERIENCE = [\r\n        {\r\n            id: 0,\r\n            name: \"Aldebaran Robotics\",\r\n            shortDesc: \"Robot usecase test app\",\r\n            jobs: [\"Full stack developement\",\"UX design\" ],\r\n            languages: [\"Python\",\"Shell\",\"Javascript\"],\r\n            logo:\"aldebaran-logo.jpg\",\r\n            thumbnailPath: \"aldebaran-robotics.jpg\",\r\n            fullImgPath: \"pepper-details-1.jpg\",\r\n            fullDesc:[\"Pepper is a 1.20m (4ft) humanoid robot created by Aldebaran Robotics (now Softbank Robotics) for B2B purposes. I built a software allowing us to test if Pepper would still work in a B2C environment.\",\r\n            \"I came up with a game based app: Pepper would randomly interact with anyone she encounters (employees, visitors, clients, children...) and record data relevant to our test during the game. Those data would then be stored in an excel spreadsheet and sent to the team for analysis on a weekly basis.\",\r\n            \"This project was a real full stack job as I went through all the steps from user research and specification to development and testing of the app with multiples iterations and finally training the team on how to use and parameter the app.\"],\r\n            link:{\r\n                name:\"About Pepper and Nao\",\r\n                address:\"https://www.softbankrobotics.com/emea/en/index\"\r\n            }\r\n                \r\n        },\r\n        {\r\n            id: 1,\r\n            name: \"GE Digital Foundry Europe\",\r\n            shortDesc: \"Engineering workflow\",\r\n            jobs: [\"Full stack development\", \"Testing\", \"CI/CD\",\"Scrum\", \"Graphic facilitation\"],\r\n            languages: [\"Javascript\", \"Python\"],\r\n            logo:\"GE-logo.png\",\r\n            thumbnailPath: \"wind-park-2.jpg\",\r\n            fullImgPath: \"GE-digital-foundry-Paris.jpg\",\r\n            fullDesc:[\"GE Digital Foundry Europe helps industrials on their digital transformation journey by creating tailored applications on Predix – a cloud-based IIoT platform from GE.\",\r\n            \"As the engineering team was relatively new, we decided to create a “boilerplate app” that would be used as base application for every project. Such a project is a big time saver for future developments. It allows us to fully focus on creating something of great value for our clients.\",\r\n            \"I developed the testing infrastructure for this boilerplate app (technologies : Node - Mocha - Chai and automation with Jenkins) and implemented it on our firsts MVPs. I also created a web page for users to easily upload a large amount of data to the cloud (Python – Flask – JavaScript).\"],\r\n            link:{\r\n                name:\"about GE Digital Foundries\",\r\n                address:\"https://www.ge.com/digital/services/ge-digital-industrial-foundries\"\r\n            }\r\n                \r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Ministry of the Armed Forces\",\r\n            shortDesc: \"Official records publishing platform\",\r\n            jobs: [\"Frontend developement\",\"Web accessibility\", \"Remote team\"],\r\n            languages: [\"Javascript\"],\r\n            logo:\"ministere-des-armees-logo.jpg\",\r\n            thumbnailPath: \"french-flag.jpg\",\r\n            fullImgPath: \"ecole-militaire.jpg\",\r\n            fullDesc:[\"Together with a team of developers working remote, we built a platform to ease and partially automate the tedious and time consuming process of publishing official records.\",\r\n            \"As this is a government platform the challenges were to build a fully secured system and to implement accessibility.\",\r\n            \"We also revamped the old public website to match the design of the platform.\"],\r\n            link:{\r\n                name:\"public website\",\r\n                address:\"https://www.bo.sga.defense.gouv.fr/\"\r\n            }\r\n                \r\n        },{\r\n            id: 3,\r\n            name: \"GE Digital Foundry Europe\",\r\n            shortDesc: \"Portfolio\",\r\n            jobs: [\"Frontend developement\"],\r\n            languages: [\"Javascript\"],\r\n            logo:\"GE-logo.png\",\r\n            thumbnailPath: \"ge-portfolio.jpg\",\r\n            fullImgPath: \"ge-portfolio.jpg\",\r\n            fullDesc:[\"GE Digital Foundry Europe helps industrials on their digital transformation journey by creating tailored applications on Predix – a cloud-based IIoT platform from GE. \",\r\n            \"This portfolio is used as a demo launcher in our showroom to help clients and visitors see what we do and what we could create with them.\"],\r\n            link:{\r\n                name:\"Featured in LeMagIT\",\r\n                address:\"https://www.lemagit.fr/actualites/450425806/GE-Digital-ce-discret-mastodonte-a-lambition-devorante\"\r\n            }\r\n                \r\n        },{\r\n            id: 4,\r\n            name: \"SANEF - Highway company\",\r\n            shortDesc: \"Journey price calculator\",\r\n            jobs: [\"Frontend developement\"],\r\n            languages: [\"Javascript\"],\r\n            logo:\"sanef-logo.jpg\",\r\n            thumbnailPath: \"highway.jpg\",\r\n            fullImgPath: \"sanef-details-1.png\",\r\n            fullDesc:[\"User friendly journey price calculator using Michelin's API for SANEF’s new website.\"],\r\n            link:{\r\n                name:\"Go to website\",\r\n                address:\"https://www.sanef.com/fr/tarifs-peage\"\r\n            }\r\n                \r\n        },{\r\n            id: 5,\r\n            name: \"Camille Robic\",\r\n            shortDesc: \"UX Designer portfolio website\",\r\n            jobs: [\"Frontend developement\"],\r\n            languages: [],\r\n            logo:\"camille-robic-logo.jpg\",\r\n            thumbnailPath: \"camille-robic.png\",\r\n            fullImgPath: \"camille-robic.png\",\r\n            fullDesc:[\"One page portfolio website for Camille Robic.\"],\r\n            link:{\r\n                name:\"Go to website\",\r\n                address:\"http://www.camille-robic.fr/\"\r\n            }\r\n                \r\n        }\r\n        \r\n]\r\n\r\n// modele\r\n// {\r\n//     id: 0,\r\n//     name: \"\",\r\n//     shortDesc: \"\",\r\n//     jobs: [],\r\n//     languages: [],\r\n//     thumbnailPath: \"\",\r\n//     fullImgPath: \"\",\r\n//     fullDesc:\"\",\r\n//     link:{\r\n//         name:\"\",\r\n//         address:\"\"\r\n//     }\r\n        \r\n// },\r\n\r\nexport default WORK_EXPERIENCE;","import React from 'react'\r\nimport { Box, Avatar } from 'grommet'\r\n\r\nimport styled from 'styled-components'\r\nimport colors from '../styles/colors'\r\n\r\nconst StyledAboutCard = styled(Box)`\r\n    margin: 2rem 0;\r\n    padding: 3rem 0 2rem;\r\n    align-items: center;\r\n    border-radius: 1rem;\r\n    //background-image: linear-gradient(to top right, #edf0f0, #ffffff);\r\n    background-color: ${colors.WHITE};\r\n    box-shadow: 0.9rem 1.4rem 5.2rem 0.3rem rgba(60,63,91,0.48);\r\n\r\n    font-size: 1.4rem;\r\n\r\n    & > span{\r\n        margin-top: 2rem;\r\n        align-self: center;\r\n        text-align-center;\r\n        font-family: \"roboto-black\"\r\n    }\r\n\r\n    & ul{\r\n        list-style-type: none;\r\n        text-align: center;\r\n        padding: 0;\r\n    }\r\n\r\n    & ul li{\r\n        line-height: 2rem;\r\n    }\r\n`;\r\nconst StyledAvatar = styled(Avatar)`\r\n    width: 14rem;\r\n    height:14rem;\r\n`;\r\nconst facts = [\r\n    \"Cheerful personality\",\r\n    \"Always up for a challenge\",\r\n    \"Loves doodling and painting\",\r\n    \"Picked up figure skating 3 years ago\",\r\n    \"Animated movies fan\"\r\n]\r\n\r\nconst renderFacts = (facts) => {\r\n    return (facts.map((fact, index) => {\r\n        return (\r\n            <li key={index}>\r\n                {fact}\r\n            </li>\r\n\r\n        )\r\n    }))\r\n}\r\nexport default function AboutCard() {\r\n    return (\r\n        <StyledAboutCard>\r\n            <StyledAvatar src={process.env.PUBLIC_URL + \"/assets/images/profile-picture.png\"} />\r\n            <span id=\"character-desc-list\">Some random facts:</span>\r\n            <ul aria-labelledby=\"character-desc-list\">\r\n                {renderFacts(facts)}\r\n            </ul>\r\n        </StyledAboutCard>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Button, Layer, Image, Avatar, Box } from 'grommet'\r\nimport { Close } from 'grommet-icons'\r\n\r\nimport styled from 'styled-components'\r\nimport { Hashtag, ButtonLinkModal } from '../styles/lib'\r\nimport colors from '../styles/colors'\r\nimport screenSize from '../styles/screenSizes'\r\n\r\nconst StyledExperience = styled.a`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 2rem 0;\r\n    clear: both;\r\n    text-decoration: none;\r\n    \r\n    &:focus {\r\n        outline: 0.1rem dashed ${colors.WHITE};\r\n        outline-offset: 0.2rem;\r\n    }\r\n`;\r\nconst StyledThumbnail = styled.div`\r\n\r\n    width: calc(100%- 4rem);\r\n    padding: 1.5rem 2rem;\r\n    \r\n    border-radius: 1rem;\r\n    background-color: ${colors.WHITE};\r\n    box-shadow: 0.9rem 1.4rem 5.2rem 0.3rem rgba(60,63,91,0.48);\r\n    \r\n    text-decoration: none;\r\n    font-size: 1.4rem;    \r\n    color: ${colors.DARKGRAY};\r\n    \r\n    & > img{\r\n        display: block;\r\n        width: calc(100% + 4rem);\r\n        margin-left: -2rem;\r\n        margin-top: -1.5rem;\r\n        border-top-left-radius: 1rem;\r\n        border-top-right-radius: 1rem;\r\n    }\r\n    \r\n    & h3{\r\n        margin: 0;\r\n        font-size: 1.6rem;\r\n        font-family: 'roboto-black';\r\n    }\r\n\r\n    & > div{\r\n        margin-bottom : 1rem;\r\n    }\r\n\r\n`;\r\nconst StyledLayer = styled(Layer)`\r\n    box-sizing: border-box;\r\n    padding: 0 1.5em 5rem;\r\n    border: none;\r\n    border-radius: 0.3rem;\r\n    background: ${colors.WHITE};\r\n    height: 100%;\r\n    //height: calc(100vh - 15rem);\r\n    overflow-y: scroll;\r\n\r\n    & .modal-close {\r\n        position: sticky;\r\n        top: 0;\r\n        clear: both;\r\n        margin-left: calc(100% - 4rem);\r\n        border-radius: 50%;\r\n    }\r\n    & .modal-close:focus svg{\r\n        outline: 0.1rem dashed ${colors.DARKGRAY};\r\n        outline-offset: 0.2rem;\r\n    }\r\n    & .modal-close svg{\r\n        border-radius: 50%;\r\n        background-color: ${colors.LIGHTGRAY};\r\n        border: 0.3rem solid ${colors.WHITE};\r\n        padding: 1rem;\r\n    }\r\n    & img{\r\n        width: calc(100% + 5rem);\r\n        margin-left: -2.5rem;\r\n        box-sizing: border-box;\r\n        margin-bottom: 1rem;\r\n        max-height: 30rem;\r\n        object-fit: contain;\r\n    }\r\n    & h1{\r\n        margin: 2rem 0 1rem;\r\n        text-align: center;\r\n        color: ${colors.AZURE};\r\n        font-family: \"roboto-black\";\r\n        font-size: 2.5rem;\r\n    }\r\n    & h2{\r\n        display: block;\r\n        text-align: center;\r\n        margin: 0 0 2rem;\r\n        font-size: 1.6rem;\r\n        font-weight: normal;\r\n    }\r\n    & h2 + div {\r\n        margin-bottom: 3rem;\r\n    }\r\n\r\n    @media screen and ${screenSize.tablet}{\r\n        margin-top: 4rem;\r\n        width: 65%;\r\n    }\r\n`;\r\n\r\nconst listJobs = (jobs) => {\r\n    return (jobs.map((job, index) => {\r\n        return (\r\n            <Hashtag key={index}>{job}</Hashtag>\r\n        )\r\n    }))\r\n}\r\nconst listLanguages = (languages) => {\r\n    return (languages.map((language, index) => {\r\n        return (\r\n            <Hashtag task key={index}>{language}</Hashtag>\r\n        )\r\n    }))\r\n}\r\nconst cleanFullDesc = (fulldesc) => {\r\n    return (fulldesc.map((paragraph, index) => {\r\n        return (\r\n            <p key={index}>{paragraph}</p>\r\n        )\r\n    }))\r\n}\r\nexport default function ExperienceCard({ data }) {\r\n    const [show, setShow] = React.useState();\r\n    return (\r\n        <StyledExperience href=\"#\">\r\n            <StyledThumbnail onClick={() => setShow(true)}>\r\n                <img src={process.env.PUBLIC_URL + \"/assets/images/\" + data.thumbnailPath} alt=\"\" />\r\n                <Box direction=\"row\" gap=\"1.5rem\" margin={{\"vertical\":\"3rem\"}}>\r\n                    <Avatar size=\"medium\" src={process.env.PUBLIC_URL + \"/assets/images/logos/\" + data.logo} />\r\n                    <div>\r\n                        <h3>{data.name}</h3>\r\n                        <span>{data.shortDesc}</span>\r\n                    </div>\r\n                </Box>\r\n                <div>\r\n                    {listJobs(data.jobs)}\r\n                    {listLanguages(data.languages)}\r\n                </div>\r\n            </StyledThumbnail>\r\n\r\n\r\n            {show && (\r\n                // work experience details modal\r\n                <StyledLayer\r\n                    onEsc={() => setShow(false)}\r\n                    onClickOutside={() => setShow(false)}\r\n                    animation=\"fadeIn\"\r\n                >\r\n                    <Button \r\n                    className=\"modal-close\" \r\n                    icon={<Close size=\"small\"/>} \r\n                    a11yTitle=\"close modal\" \r\n                    focusIndicator=\"false\"\r\n                    onClick={() => setShow(false)} />\r\n                    <Image src={process.env.PUBLIC_URL + \"/assets/images/\" + data.fullImgPath} alt=\"\" />\r\n                    <h1>{data.name}</h1>\r\n                    <h2>{data.shortDesc}</h2>\r\n                    <div>\r\n                        {listJobs(data.jobs)}\r\n                        {listLanguages(data.languages)}\r\n                    </div>\r\n                    <p>{cleanFullDesc(data.fullDesc)}</p>\r\n\r\n                    <ButtonLinkModal\r\n                        href={data.link.address}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >\r\n                        {data.link.name}\r\n                    </ButtonLinkModal>\r\n                </StyledLayer>\r\n            )}\r\n        </StyledExperience>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport WORK_EXPERIENCE from '../data/workExperienceData';\r\nimport AboutCard from './AboutCard';\r\nimport ExperienceCard from './ExperienceCard'\r\n\r\nimport styled from 'styled-components'\r\nimport {SrOnly} from '../styles/lib'\r\nimport screenSize from '../styles/screenSizes'\r\n\r\n\r\nconst StyledAboutMe = styled.section`\r\n    padding: 2rem;\r\n    columns: 25rem 4;\r\n    column-gap: 3rem;\r\n    \r\n    @media screen and ${screenSize.tablet}{\r\n        columns: 30rem 4;\r\n    }\r\n`;\r\n\r\nconst experiences = WORK_EXPERIENCE.map((experience, index) => {\r\n    return (\r\n        <ExperienceCard data={experience} key={index} />\r\n    )\r\n});\r\n\r\nexport default function AboutMe() {\r\n    return (\r\n        <StyledAboutMe>\r\n            <SrOnly>\r\n                <h2>About me, some of my projects</h2>\r\n                <img src={process.env.PUBLIC_URL + \"/assets/images/share-img.jpg\"} alt=\"\"></img>\r\n            </SrOnly>\r\n            <AboutCard />\r\n            {experiences}\r\n        </StyledAboutMe>\r\n    )\r\n}\r\n","\r\nimport { deepMerge } from 'grommet/utils'\r\nimport { grommet } from 'grommet/themes'\r\n\r\nimport colors from './colors'\r\n\r\nconst THEME = deepMerge(grommet, {\r\n    global: {\r\n        colors: {\r\n            'brand': colors.AZURE,\r\n            'accent-1': colors.DEEPBLUE,\r\n            'accent-2': colors.PINK,\r\n            'text': colors.DARKGRAY,\r\n            'white': colors.WHITE,\r\n            'black': colors.BLACK,\r\n        },\r\n        font: {\r\n            family: 'Roboto-regular',\r\n            size: '1.6rem',\r\n            color: colors.DARKGRAY\r\n        },\r\n    }\r\n})\r\nexport default THEME;","import React from 'react';\r\n\r\nimport TopBar from './components/Header'\r\nimport Intro from './components/Intro'\r\nimport Contact from './components/Contact'\r\nimport FooterBar from './components/Footer'\r\nimport AboutMe from './components/AboutMe'\r\n\r\nimport { Grommet, Main } from 'grommet';\r\nimport THEME from './styles/theme';\r\nimport './styles/app.css'\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<Grommet className=\"grommet\" theme={THEME}>\r\n\t\t\t\t<TopBar />\r\n\t\t\t\t<Main>\r\n\t\t\t\t\t<Intro/>\r\n\t\t\t\t\t<AboutMe/>\t\t\t\r\n\t\t\t\t\t<Contact/>\r\n\t\t\t\t</Main>\r\n\t\t\t\t<FooterBar/>\r\n\t\t\t</Grommet>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n//fonts\r\nimport './styles/fonts/Roboto-Regular.ttf'\r\nimport './styles/fonts/Roboto-Bold.ttf'\r\nimport './styles/fonts/Thinking_of_Betty.ttf'\r\n\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}